// <auto-generated />
using Blog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog.Data.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("Blog.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "1.webp",
                            Name = "Topics",
                            Url = "topics"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "2.webp",
                            Name = "Platforms and Communities",
                            Url = "platforms_and_communities"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "3.webp",
                            Name = "Companies",
                            Url = "companies"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "4.webp",
                            Name = "Inspires",
                            Url = "inpires"
                        });
                });

            modelBuilder.Entity("Blog.Entity.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImgUrl = "1.jpg",
                            Name = "Code Better",
                            Url = "code_better"
                        },
                        new
                        {
                            Id = 2,
                            ImgUrl = "2.jpg",
                            Name = "A List Apart",
                            Url = "a_list_apart"
                        },
                        new
                        {
                            Id = 3,
                            ImgUrl = "3.jpg",
                            Name = "The Steelkiwi Blog",
                            Url = "the_steelkiwi_blog"
                        },
                        new
                        {
                            Id = 4,
                            ImgUrl = "4.jpg",
                            Name = "Coding Horror",
                            Url = "coding_horror"
                        },
                        new
                        {
                            Id = 5,
                            ImgUrl = "5.jpg",
                            Name = "Microsoft",
                            Url = "microsoft"
                        },
                        new
                        {
                            Id = 6,
                            ImgUrl = "5.jpg",
                            Name = "Adobe",
                            Url = "adobe"
                        },
                        new
                        {
                            Id = 7,
                            ImgUrl = "6.jpg",
                            Name = "Twilio",
                            Url = "twilio"
                        },
                        new
                        {
                            Id = 8,
                            ImgUrl = "7.jpg",
                            Name = "Nutanix",
                            Url = "nutanix"
                        },
                        new
                        {
                            Id = 9,
                            ImgUrl = "8.jpg",
                            Name = "Stack Overflow",
                            Url = "stack_overflow"
                        },
                        new
                        {
                            Id = 10,
                            ImgUrl = "8.jpg",
                            Name = "Chrome Developer Tools",
                            Url = "chrome_developer_tools"
                        },
                        new
                        {
                            Id = 11,
                            ImgUrl = "9.jpg",
                            Name = "GitHub",
                            Url = "github"
                        },
                        new
                        {
                            Id = 12,
                            ImgUrl = "10.jpg",
                            Name = "jQuery",
                            Url = "jquery"
                        },
                        new
                        {
                            Id = 13,
                            ImgUrl = "11.jpg",
                            Name = "Dennis Ritchie",
                            Url = "dennis_ritchie"
                        },
                        new
                        {
                            Id = 14,
                            ImgUrl = "12.jpg",
                            Name = "Bjarne Stroustrup",
                            Url = "bjarne_stroustrup"
                        },
                        new
                        {
                            Id = 15,
                            ImgUrl = "13.jpg",
                            Name = "James Gosling",
                            Url = "james_gosling"
                        });
                });

            modelBuilder.Entity("Blog.Entity.PostCategories", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PostId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("PostCategories");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            PostId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            PostId = 3,
                            CategoryId = 1
                        },
                        new
                        {
                            PostId = 4,
                            CategoryId = 1
                        },
                        new
                        {
                            PostId = 5,
                            CategoryId = 3
                        },
                        new
                        {
                            PostId = 6,
                            CategoryId = 3
                        },
                        new
                        {
                            PostId = 7,
                            CategoryId = 3
                        },
                        new
                        {
                            PostId = 8,
                            CategoryId = 3
                        },
                        new
                        {
                            PostId = 9,
                            CategoryId = 2
                        },
                        new
                        {
                            PostId = 10,
                            CategoryId = 2
                        },
                        new
                        {
                            PostId = 11,
                            CategoryId = 2
                        },
                        new
                        {
                            PostId = 12,
                            CategoryId = 2
                        },
                        new
                        {
                            PostId = 13,
                            CategoryId = 4
                        },
                        new
                        {
                            PostId = 14,
                            CategoryId = 4
                        },
                        new
                        {
                            PostId = 15,
                            CategoryId = 4
                        });
                });

            modelBuilder.Entity("Blog.Entity.PostCategories", b =>
                {
                    b.HasOne("Blog.Entity.Category", "Category")
                        .WithMany("PostCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog.Entity.Post", "Post")
                        .WithMany("PostCategories")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Blog.Entity.Category", b =>
                {
                    b.Navigation("PostCategories");
                });

            modelBuilder.Entity("Blog.Entity.Post", b =>
                {
                    b.Navigation("PostCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
